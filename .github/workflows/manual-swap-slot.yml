name: "Manual: Swap Slot"
on:
  workflow_dispatch:
  pull_request:
    types: [opened, closed]
    branches:
      - appsettings-manual
env:
  config_dir: ./.github/workflows/configs
  repo: actions-az-webapp-swap-test-e2e

  script_path: ./manual-swap-slot/index.js

jobs:
  get-matrix:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.get-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v3
    - name: Export deployment matrix
      id: get-matrix
      run: |
        node ${{ env.script_path }} test-get-deploy-slots.json
      working-directory: ${{ env.config_dir }}

  get-slot-settings:
    if: github.event_name == 'workflow_dispatch'
    name: ${{ format('⚙️ Get Slot | {0} - {1}', matrix.name, matrix.slot) }}
    runs-on: ubuntu-latest
    needs: [ get-matrix ]
    strategy:
      matrix:
        include: ${{ fromJson(needs.get-matrix.outputs.result) }}
    steps:
      - uses: actions/checkout@v3
      # SP:  "DevOps WRM-Software/actions-az-webapp-swap-test-e2e Swap Slot for Test"
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.Swap_azure_service_principal_sdk }}
          allow-no-subscriptions: true
      - uses: mildronize/actions-az-webapp-swap@v2.0.1
        with:
          mode: get-deploy-slots
          config: ${{ toJson(matrix) }}
    
  create-swap-plan: 
    needs: [ get-slot-settings ]
    name: Create Swap Plan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Create Swap Plan
        uses: mildronize/actions-az-webapp-swap@v2.0.1
        with: 
          mode: create-swap-plan
          token: ${{ secrets.MY_WRM_PERSONAL_ACCESS_TOKEN }}
          repo: ${{ env.repo }}
          ref: appsettings-manual

  set-slot-settings:
    if: >- 
      github.event_name == 'pull_request' &&
      github.event.action != 'closed'
    name: ${{ format('⚙️ Set Slot | {0} - {1}', matrix.name, matrix.slot) }}
    needs: [ get-matrix  ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.get-matrix.outputs.result) }}
    steps:
      - uses: actions/checkout@v3
      # SP:  "DevOps WRM-Software/actions-az-webapp-swap-test-e2e Swap Slot for Test"
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.Swap_azure_service_principal_sdk }}
          allow-no-subscriptions: true
      
      - name: set-slot-settings
        uses: mildronize/actions-az-webapp-swap@v2.0.1
        with: 
          mode: set-deploy-slots
          config: ${{ toJson(matrix) }}

  swap-slot:
    if: >- 
      github.event_name == 'pull_request' &&
      github.event.action == 'closed' && 
      github.event.pull_request.merged == true
    name: ${{ format('🚀 Swap Slot | {0} - {1}', matrix.name, matrix.slot) }}
    needs: [ get-matrix ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.get-matrix.outputs.result) }}
    steps:
      - uses: actions/checkout@v3
      # SP:  "DevOps WRM-Software/actions-az-webapp-swap-test-e2e Swap Slot for Test"
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.Swap_azure_service_principal_sdk }}
          allow-no-subscriptions: true
      
      - name: set-slot-settings
        uses: mildronize/actions-az-webapp-swap@v2.0.1
        with: 
          mode: swap-slots
          config: ${{ toJson(matrix) }}

  clean:
    name: Clean
    needs: [ swap-slot ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: clean
        uses: mildronize/actions-az-webapp-swap@v2.0.1
        with: 
          mode: clean
          token: ${{ secrets.MY_WRM_PERSONAL_ACCESS_TOKEN }}
          repo: ${{ env.repo }}
          ref: appsettings-manual

  close:
    if: >- 
      github.event_name == 'pull_request' &&
      github.event.action == 'closed' && 
      github.event.pull_request.merged == false
    name: close PR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: clean
        uses: mildronize/actions-az-webapp-swap@v2.0.1
        with: 
          mode: clean
          token: ${{ secrets.MY_WRM_PERSONAL_ACCESS_TOKEN }}
          repo: ${{ env.repo }}
  
